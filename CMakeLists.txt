project(spgGen)

cmake_minimum_required(VERSION 2.6)

set(spgGen_SRCS
    src/crystal.cpp
    src/elemInfo.cpp
    src/spgGenCombinatorics.cpp
    src/spgGenOptions.cpp
    src/spgGen.cpp)

include_directories(${spgGen_SOURCE_DIR}/include)

add_library (SpgGenerate ${spgGen_SRCS})

# C++11 is required. MSVC should not need a flag
if(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
endif(UNIX)

option(BUILD_RELEASE
       "Whether to compile with optimizations or not"
       ON)

# Let's perform some optimizations!
if (BUILD_RELEASE)
  message("-- Release build. Please use -DBUILD_RELEASE=OFF if you wish to use a debug build")
  if(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
  endif(UNIX)
  if(MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Ox")
  endif(MSVC)
else (BUILD_RELEASE)
  message("-- Debug build")

endif (BUILD_RELEASE)

add_executable (spgGen src/main.cpp)
target_link_libraries (spgGen SpgGenerate)

option( BUILD_CGI
        "Whether to compile the CGI handler in addition to the spgGen code."
        ON )
if(BUILD_CGI)
  add_executable (spgGen.cgi cgi/spgGen-cgi.cpp)
  target_link_libraries (spgGen.cgi SpgGenerate)
endif(BUILD_CGI)
